// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZooManagment;

#nullable disable

namespace ZooManagment.Migrations
{
    [DbContext(typeof(EFDataContext))]
    [Migration("20240917084533_creat_tabales")]
    partial class creat_tabales
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ZooManagment.Entities.Animal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId")
                        .IsUnique()
                        .HasFilter("[SectionId] IS NOT NULL");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("ZooManagment.Entities.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalCount")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("Erea")
                        .HasPrecision(5, 3)
                        .HasColumnType("decimal(5,3)");

                    b.Property<int?>("ZooId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ZooId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("ZooManagment.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId")
                        .IsUnique()
                        .HasFilter("[SectionId] IS NOT NULL");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("ZooManagment.Entities.Zoo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Zoos");
                });

            modelBuilder.Entity("ZooManagment.Entities.Animal", b =>
                {
                    b.HasOne("ZooManagment.Entities.Section", "Section")
                        .WithOne("Animal")
                        .HasForeignKey("ZooManagment.Entities.Animal", "SectionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Section");
                });

            modelBuilder.Entity("ZooManagment.Entities.Section", b =>
                {
                    b.HasOne("ZooManagment.Entities.Zoo", "Zoo")
                        .WithMany("Sections")
                        .HasForeignKey("ZooId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Zoo");
                });

            modelBuilder.Entity("ZooManagment.Entities.Ticket", b =>
                {
                    b.HasOne("ZooManagment.Entities.Section", "Section")
                        .WithOne("Ticket")
                        .HasForeignKey("ZooManagment.Entities.Ticket", "SectionId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Section");
                });

            modelBuilder.Entity("ZooManagment.Entities.Section", b =>
                {
                    b.Navigation("Animal")
                        .IsRequired();

                    b.Navigation("Ticket")
                        .IsRequired();
                });

            modelBuilder.Entity("ZooManagment.Entities.Zoo", b =>
                {
                    b.Navigation("Sections");
                });
#pragma warning restore 612, 618
        }
    }
}
